#!/bin/bash

CLASS_NAME=$1

#print help
if [[ $1 == "-h" || $1 == "--help" ]]; then

	echo $'Script written in bash for creating C++ class .h and .cpp files. \n\nOPTIONS:\n\t-pf | --public-function\n\t\tScript will create public functions in proper place. You do not need to write (); at the end, only name of a function. Example: -pf public_function1 public_function2\n\n\t-f | --private-function\n\t\tScript will create private functions in proper place. You do not need to write (); at the end, only name of a function. Example: -f private_function1 private_function2\n\n\t-pv | --public-variable\n\t\tScript will create public variables in proper place. You do not need to write ; at the end, only name of a variable. Example: -pv public_variable1 public_variable2\n\n\t-v | --private-variable\n\t\tScript will create private variables in proper place. You do not need to write ; at the end, only name of a variable. Example: -v private_variable1 private_variable2'
	
	exit
fi

#create .cpp and .h files, if name is specified
if [[ $1 !=  "" && ${1:0:1} != "-" ]]; then

	if [ ! -f $CLASS_NAME.cpp ]; then
		touch $CLASS_NAME.cpp
	else
		echo "$CLASS_NAME.cpp exists, not creating it"
		CPP_EXISTED="TRUE"
	fi
	if [ ! -f $CLASS_NAME.h ]; then
		touch $CLASS_NAME.h
	else
		echo "$CLASS_NAME.h exists, not creating it"
		H_EXISTED="TRUE"
	fi

#elif [[ $1 == "-h" ]]; then
else

		echo "Name of class not specified"
		exit

fi

#set the variables containing names of functions and variables
PUBLIC_FUNCTIONS=
PRIVATE_FUNCTIONS=
PUBLIC_VARIABLES=
PRIVATE_VARIABLES=
while [ "$1" != "" ]; do
	case $1 in
		-pf | --public-function )
									while [[ $2 != "" && ${2:0:1} != "-" ]]; do
										PUBLIC_FUNCTIONS+=$'\t'$2$'();\n'
										shift
									done
									PUBLIC_FUNCTIONS+=$'\n'
									;;

		-f | --private-function )
									while [[ $2 != "" && ${2:0:1} != "-" ]]; do
										PRIVATE_FUNCTIONS+=$'\t'$2$'();\n'
										shift
									done
									PRIVATE_FUNCTIONS+=$'\n'
									;;

		-pv | --public-variable )
									while [[ $2 != "" && ${2:0:1} != "-" ]]; do
										PUBLIC_VARIABLES+=$'\t'$2$';\n'
										shift
									done
									PUBLIC_VARIABLES+=$'\n'
									;;

		-v | --private-variable )
									while [[ $2 != "" && ${2:0:1} != "-" ]]; do
										PRIVATE_VARIABLES+=$'\t'$2$';\n'
										shift
									done
									PRIVATE_VARIABLES+=$'\n'
									;;

	esac
	shift
done

#create actual file using variables created above
	if [ ! "$H_EXISTED" == "TRUE" ]; then
        echo $'#pragma once\n\nclass '"$CLASS_NAME"$'{\npublic:\n\n'"$PUBLIC_VARIABLES$PUBLIC_FUNCTIONS"$'private:\n\n'"$PRIVATE_VARIABLES$PRIVATE_FUNCTIONS"$'};' >> $CLASS_NAME.h
	fi
	
	if [ ! "$CPP_EXISTED" == "TRUE" ]; then
		echo $'#include \"'"$CLASS_NAME"$'.h\"\n\nusing namespace std' >> $CLASS_NAME.cpp
	fi

exit 0
